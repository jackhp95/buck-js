const aria = {
  Atomic: "ariaAtomic",
  AutoComplete: "ariaAutoComplete",
  Busy: "ariaBusy",
  Checked: "ariaChecked",
  Col: {
    Count: "ariaColCount",
    Index: "ariaColIndex",
    IndexText: "ariaColIndexText",
    Span: "ariaColSpan",
  },
  Current: "ariaCurrent",
  Description: "ariaDescription",
  Disabled: "ariaDisabled",
  Expanded: "ariaExpanded",
  HasPopup: "ariaHasPopup",
  Hidden: "ariaHidden",
  KeyShortcuts: "ariaKeyShortcuts",
  Label: "ariaLabel",
  Level: "ariaLevel",
  Live: "ariaLive",
  Modal: "ariaModal",
  Multiline: "ariaMultiline",
  MultiSelectable: "ariaMultiSelectable",
  Orientation: "ariaOrientation",
  Placeholder: "ariaPlaceholder",
  PosInSet: "ariaPosInSet",
  Pressed: "ariaPressed",
  ReadOnly: "ariaReadOnly",
  Relevant: "ariaRelevant",
  Required: "ariaRequired",
  RoleDescription: "ariaRoleDescription",
  Row: {
    Count: "ariaRowCount",
    Index: "ariaRowIndex",
    IndexText: "ariaRowIndexText",
    Span: "ariaRowSpan",
  },
  Selected: "ariaSelected",
  SetSize: "ariaSetSize",
  Sort: "ariaSort",
  Value: {
    Max: "ariaValueMax",
    Min: "ariaValueMin",
    Now: "ariaValueNow",
    Text: "ariaValueText",
  },
};

const dom = {
  // self
  localName: "localName",
  tagName: "tagName",
  nodeType: "nodeType",
  nodeName: "nodeName",
  nodeValue: "nodeValue",
  // Children
  children: "children",
  childNodes: "childNodes",
  firstElementChild: "firstElementChild",
  lastElementChild: "lastElementChild",
  childElementCount: "childElementCount",
  firstChild: "firstChild",
  lastChild: "lastChild",
  // Web Component
  is: "is",
  part: "part",
  slot: "slot",
  shadowRoot: "shadowRoot",
  assignedSlot: "assignedSlot",
  // Hierarchy
  ownerDocument: "ownerDocument",
  isConnected: "isConnected",
  parentElement: "parentElement",
  parentNode: "parentNode",
  previousElementSibling: "previousElementSibling",
  previousSibling: "previousSibling",
  nextElementSibling: "nextElementSibling",
  nextSibling: "nextSibling",
};

const visual = {
  style: "style",
  bgColor: "bgColor",
  background: "background",
  scroll: {
    Top: "scrollTop",
    Left: "scrollLeft",
    Width: "scrollWidth",
    Height: "scrollHeight",
    TopMax: "scrollTopMax",
    LeftMax: "scrollLeftMax",
  },
  client: {
    Top: "clientTop",
    Left: "clientLeft",
    Width: "clientWidth",
    Height: "clientHeight",
  },
  offset: {
    Parent: "offsetParent",
    Top: "offsetTop",
    Left: "offsetLeft",
    Width: "offsetWidth",
    Height: "offsetHeight",
  },
};

const events = {
  abort: "onabort",
  autocomplete: "onautocomplete",
  autocompleteerror: "onautocompleteerror",
  blur: "onblur",
  cancel: "oncancel",
  canplay: "oncanplay",
  canplaythrough: "oncanplaythrough",
  change: "onchange",
  click: "onclick",
  close: "onclose",
  contextmenu: "oncontextmenu",
  cuechange: "oncuechange",
  dblclick: "ondblclick",
  drag: "ondrag",
  drag: {
    end: "ondragend",
    enter: "ondragenter",
    leave: "ondragleave",
    over: "ondragover",
    start: "ondragstart",
  },
  drop: "ondrop",
  durationchange: "ondurationchange",
  emptied: "onemptied",
  ended: "onended",
  error: "onerror",
  focus: "onfocus",
  input: "oninput",
  invalid: "oninvalid",
  key: { down: "onkeydown", press: "onkeypress", up: "onkeyup" },
  load: "onload",
  loadeddata: "onloadeddata",
  loadedmetadata: "onloadedmetadata",
  loadstart: "onloadstart",
  pointer: {
    down: "onpointerdown",
    enter: "onpointerenter",
    leave: "onpointerleave",
    move: "onpointermove",
    out: "onpointerout",
    over: "onpointerover",
    up: "onpointerup",
  },
  touch: {
    down: "ontouchdown",
    enter: "ontouchenter",
    leave: "ontouchleave",
    move: "ontouchmove",
    out: "ontouchout",
    over: "ontouchover",
    up: "ontouchup",
  },
  mouse: {
    down: "onmousedown",
    enter: "onmouseenter",
    leave: "onmouseleave",
    move: "onmousemove",
    out: "onmouseout",
    over: "onmouseover",
    up: "onmouseup",
    wheel: "onmousewheel",
  },
  pause: "onpause",
  play: "onplay",
  playing: "onplaying",
  progress: "onprogress",
  ratechange: "onratechange",
  reset: "onreset",
  resize: "onresize",
  scroll: "onscroll",
  seeked: "onseeked",
  seeking: "onseeking",
  select: "onselect",
  show: "onshow",
  sort: "onsort",
  stalled: "onstalled",
  submit: "onsubmit",
  suspend: "onsuspend",
  timeupdate: "ontimeupdate",
  toggle: "ontoggle",
  volumechange: "onvolumechange",
  waiting: "onwaiting",
};

const microdata = {
  item: {
    id: "itemid",
    prop: "itemprop",
    ref: "itemref",
    scope: "itemscope",
    type: "itemtype",
  },
};

const element = {
  title: "title",
  id: "id",
  html: "innerHTML",
  text: "textContent",
  className: "className",
  // Obj
  classList: "classList",
  data: "dataset",
  attributes: "attributes",
  // bool
  hidden: "hidden",
  draggable: "draggable",
  contentEditable: "contenteditable",
  spellcheck: "spellcheck",
  autocapitalize: "autocapitalize",
  autocomplete: "autocomplete",
  autofocus: "autofocus",
  // Keyboard
  accesskey: "accesskey",
  enterkeyhint: "enterkeyhint",
  inputMode: "inputmode",
  tabIndex: "tabIndex",
  // i18n
  lang: "lang",
  translate: "translate",
  dir: "dir",
};

const input = {
  accept: "accept",
  alt: "alt",
  autocomplete: "autocomplete",
  autofocus: "autofocus",
  capture: "capture",
  checked: "checked",
  dirname: "dirname",
  disabled: "disabled",
  form: "form",
  form: {
    action: "formaction",
    enctype: "formenctype",
    method: "formmethod",
    novalidate: "formnovalidate",
    target: "formtarget",
  },
  height: "height",
  list: "list",
  max: "max",
  maxlength: "maxlength",
  min: "min",
  minlength: "minlength",
  multiple: "multiple",
  name: "name",
  pattern: "pattern",
  placeholder: "placeholder",
  readonly: "readonly",
  required: "required",
  size: "size",
  src: "src",
  step: "step",
  type: "type",
  value: "value",
  width: "width",
};


const validation = {
    validationMessage: "validationMessage",
    willValidate: true,
    validity: {
        badInput: false, 
        customError: true, 
        patternMismatch: true, 
        rangeOverflow: false, 
        rangeUnderflow: false, 
        stepMismatch: false, 
        tooLong: false, 
        tooShort: false, 
        typeMismatch: false, 
        valid: false, 
        valueMissing: false,
     },
    attrValue: "",
    value: "",
    valueAsDate: null,
    valueAsNumber: NaN,
}

export { aria, dom, visual, events, microdata, element, input, validation };