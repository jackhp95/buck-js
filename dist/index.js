var M=(o=[])=>{let n=(...e)=>console.warn(...e),s=new Map(o);return{clear:()=>s.clear(),delete:e=>{if(s.has(e)){let a=s.get(e);return a.forEach(c=>{let u=s.get(c);u.delete(e),u.size||s.delete(c)}),s.delete(e),a}},remove:e=>a=>{if(s.has(e)){let c=s.get(e);c.delete(a),c.size||s.delete(e)}if(s.has(a)){let c=s.get(a);c.delete(e),c.size||s.delete(a)}},size:()=>s.size,has:e=>{if(s.has(e)){let a=s.get(e);return c=>new Set(a).has(c)}return!1},get:e=>s.has(e)?new Set(s.get(e)):void 0,set:e=>a=>{s.has(e)?s.get(e).add(a):s.set(e,new Set([a])),s.has(a)?s.get(a).add(e):s.set(a,new Set([e]))},nodes:()=>new Set(s.keys()),edges:()=>{let e=new Map;return s.forEach(([a,c])=>c.forEach(u=>e.set(a,u))),e},tidy:()=>{s.entries().map(([e,a])=>{loop(c=>{s.has(c)?s.get(c).has(e)||n("non-bidirectional | exists in set, not in map: ",e):n("non-bidirectional | exists in map, not in set: ",c)})(a)})}}};var i=o=>n=>{for(let s of n)o(s)},_=o=>(console.log(o),o),f=(o,n=document)=>n.querySelectorAll(o),m=o=>o.tagName?o:o.parentElement,w=(o,...n)=>o(...n),j=(o,n)=>{if(o===n)return 0;var s=o.compareDocumentPosition(n);return s&Node.DOCUMENT_POSITION_FOLLOWING||s&Node.DOCUMENT_POSITION_CONTAINED_BY?-1:s&Node.DOCUMENT_POSITION_PRECEDING||s&Node.DOCUMENT_POSITION_CONTAINS?1:0},I=o=>("sort"in o?o:[...o]).sort(j);var Q=o=>{let n={root:o.root||document,scheduleInit:o.scheduleInit||(t=>addEventListener("DOMContentLoaded",t,{once:!0})),scheduleQueue:o.scheduleQueue||(t=>t())},s={attributes:!0,attributeOldValue:!0,childList:!0,subtree:!0},e={graph:M(),match:new Set,query:new Set,queue:new Set,after:new Set,plugins:new Set(o.plugins||[]),active:new Set,allSelect:"*"},a=t=>{let r;t.media&&(r=matchMedia(t.media));let g=S=>{S.matches?(e.active.add(t),T(t)):e.graph.has(t)&&(e.graph.get(t).forEach(t.update),e.graph.delete(t),e.active.delete(t))};r?(g(r),r.addEventListener("changes",g)):(e.active.add(t),T(t))},c=()=>{e.allSelect=[...e.active].map(t=>t.select).join()},u=()=>{e.match.clear(),e.query.clear(),e.queue.clear(),e.after.clear()},l=t=>()=>{t.isConnected||(i(r=>e.graph.delete(r))(f("*",t)),e.graph.delete(t))},p=t=>{if(!e.graph.has(t))return console.log(t,"doesn't have a plugin");let r=e.graph.get(t);i(g=>g.update(t))(r),e.after.add(l(t))},d=({parentElement:t})=>{!t||e.queue.has(t)||(d(t),e.graph.has(t)&&e.queue.add(t))},E=t=>r=>{let g=t.matches(r.select),S=e.graph.has(r,t);S!==g&&(g?e.graph.set(r)(t):e.after.add(()=>{e.graph.remove(r)(t)})),(S||g)&&e.queue.add(t)},b=t=>[...e.active].map(E(t)),O=t=>{(t.matches(e.allSelect)||e.graph.has(t))&&e.match.add(t),i(r=>e.match.add(r))(f(e.allSelect,t)),i(r=>e.graph.has(r)&&e.match.add(r))(f("*",t))},C=()=>{i(O)(e.query),i(b)(e.match),i(d)(e.queue),i(p)(I(e.queue)),i(w)(e.after),u()},v=i(t=>{let r=m(t);r&&e.query.add(r)}),D=t=>{t.type==="attributes"&&e.match.add(m(t.target)),t.addedNodes.length&&v(t.addedNodes),t.removedNodes.length&&v(t.removedNodes),e.match.add(m(t.target))},P=t=>{i(D)(t),n.scheduleQueue(C)},x=new MutationObserver(P),F=t=>r=>{e.graph.set(t)(r),t.update(r)},T=t=>{c(),i(F(t))(f(t.select,n.root))};n.scheduleInit(()=>{e.plugins.forEach(a),x.observe(n.root,s)});let q=Object.assign(t=>[...e.graph.get(t)],{add:t=>{e.plugins.add(t),a(t)},clear:()=>{u(),e.graph.clear()},delete:t=>{e.plugins.delete(t),e.graph.delete(t)},has:t=>e.graph.has(t),active:()=>[...e.active]});return o.debug?Object.assign(q,{debug:e}):q};var N=(o,n)=>new Proxy(o,{get:(s,e)=>n[e].bind(n),apply:function(s,e,a){return o(...a)}});function A(o){this.rootMap||(this.rootMap=new Map);let n=this.rootMap;n.has(o)||n.set(o,new Map);let s=n.get(o);return N(a=>{s.has(a)||s.set(a,new Map);let c=s.get(a);return N((l,p)=>{let d=n.get(a),E=(...b)=>{let O=d.has(l)?p(d.get(l),b):b;d.set(l,O)};return o(a,d),N(E,d)},c)},s)}var U=(o,n)=>o(()=>{let s=([e,a])=>e(...a);n.entries().forEach(s),n.clear()}),G=A(U),y=(o,n)=>{o(()=>{let[s,e]=n.entries().next().value;s(...e),n.delete(s),y(o,n)})},L=A(y),h=o=>n=>{let s={fn:n,canceled:!1};return s.cancel=()=>s.canceled=!0,s.throttler=e=>{s.throttle=()=>{s.throttled||(e(()=>s.throttled=!1)(),s.throttled=!0)}},function(...e){s.args=e,s.debounce&&(s.debounce=Date.now()),s.callback=()=>s.fn(...s.args);let a=(l,p)=>[s.canceled,s.throttled,s.debounce&&s.debounce!==l,()=>p(s.callback())].find(d=>d),c=l=>p=>{let d=[a(l,p),s];d.length=o.length,o(...d)};s.throttle&&s.throttle();let u=new Promise(c(s.debounce));return N(this,Object.assign(u,s))}},z=h(o=>o),R=h(queueMicrotask),k=h(setTimeout),H=h(requestAnimationFrame),B=h(o=>requestAnimationFrame(()=>requestAnimationFrame(o))),V=h(requestIdleCallback),W=(o=0)=>h(n=>setTimeout(n,o)),Y=h((o,n)=>{o(),n.cancel()});export{M as Graph,f as QSA,m as asEl,G as batch,N as extendFunction,V as idle,w as invoke,_ as log,i as loop,B as next,Q as onDom,Y as once,h as orca,L as recur,I as sortEls,z as sync,k as task,R as then,H as tick,W as wait};
//# sourceMappingURL=index.js.map
