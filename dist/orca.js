var i=(e,n)=>new Proxy(e,{get:(t,c)=>n[c].bind(n),apply:function(t,c,o){return e(...o)}}),d=new Map;function g(e){d.has(e)||d.set(e,new Map);let n=d.get(e);return i(c=>{n.has(c)||n.set(c,new Map);let o=n.get(c);return i((l,u)=>{let s=d.get(c),a=(...p)=>{let f=s.has(l)?u(s.get(l),p):p;s.set(l,f)};return e(c,s),i(a,s)},o)},n)}var m=(e,n)=>e(()=>{let t=([c,o])=>c(...o);n.entries().forEach(t),n.clear()}),w=g(m),b=(e,n)=>{e(()=>{let[t,c]=n.entries().next().value;t(...c),n.delete(t),b(e,n)})},F=g(b),r=e=>n=>{let t={fn:n,canceled:!1};return t.cancel=()=>t.canceled=!0,t.throttler=c=>{t.throttle=()=>{t.throttled||(c(()=>t.throttled=!1)(),t.throttled=!0)}},function(...c){t.args=c,t.debounce&&(t.debounce=Date.now()),t.callback=()=>t.fn(...t.args);let o=(u,s)=>[t.canceled,t.throttled,t.debounce&&t.debounce!==u,()=>s(t.callback())].find(a=>a),h=u=>s=>{let a=[o(u,s),t];a.length=e.length,e(...a)};t.throttle&&t.throttle();let l=new Promise(h(t.debounce));return i(this,Object.assign(l,t))}},M=r(e=>e),k=r(queueMicrotask),x=r(setTimeout),A=r(requestAnimationFrame),q=r(e=>requestAnimationFrame(()=>requestAnimationFrame(e))),T=r(requestIdleCallback),y=(e=0)=>r(n=>setTimeout(n,e)),P=r((e,n)=>{e(),n.cancel()});export{w as batch,i as extendFunction,T as idle,q as next,P as once,r as orca,F as recur,M as sync,x as task,k as then,A as tick,y as wait};
//# sourceMappingURL=orca.js.map
